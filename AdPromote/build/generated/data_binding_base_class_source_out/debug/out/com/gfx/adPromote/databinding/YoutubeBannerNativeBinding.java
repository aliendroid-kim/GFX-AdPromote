// Generated by view binder compiler. Do not edit!
package com.gfx.adPromote.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gfx.adPromote.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class YoutubeBannerNativeBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView ad;

  @NonNull
  public final LinearLayout bodyColor;

  @NonNull
  public final TextView likeCounter;

  @NonNull
  public final RelativeLayout nativePreviewProgress;

  @NonNull
  public final RelativeLayout playVideo;

  @NonNull
  public final FrameLayout promoteNative;

  @NonNull
  public final RelativeLayout relPreview;

  @NonNull
  public final TextView title;

  @NonNull
  public final ImageView videoPreview;

  @NonNull
  public final TextView views;

  @NonNull
  public final RelativeLayout watchVideo;

  @NonNull
  public final AppCompatTextView watchVideoTxt;

  private YoutubeBannerNativeBinding(@NonNull FrameLayout rootView, @NonNull TextView ad,
      @NonNull LinearLayout bodyColor, @NonNull TextView likeCounter,
      @NonNull RelativeLayout nativePreviewProgress, @NonNull RelativeLayout playVideo,
      @NonNull FrameLayout promoteNative, @NonNull RelativeLayout relPreview,
      @NonNull TextView title, @NonNull ImageView videoPreview, @NonNull TextView views,
      @NonNull RelativeLayout watchVideo, @NonNull AppCompatTextView watchVideoTxt) {
    this.rootView = rootView;
    this.ad = ad;
    this.bodyColor = bodyColor;
    this.likeCounter = likeCounter;
    this.nativePreviewProgress = nativePreviewProgress;
    this.playVideo = playVideo;
    this.promoteNative = promoteNative;
    this.relPreview = relPreview;
    this.title = title;
    this.videoPreview = videoPreview;
    this.views = views;
    this.watchVideo = watchVideo;
    this.watchVideoTxt = watchVideoTxt;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static YoutubeBannerNativeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static YoutubeBannerNativeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.youtube_banner_native, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static YoutubeBannerNativeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ad;
      TextView ad = ViewBindings.findChildViewById(rootView, id);
      if (ad == null) {
        break missingId;
      }

      id = R.id.body_color;
      LinearLayout bodyColor = ViewBindings.findChildViewById(rootView, id);
      if (bodyColor == null) {
        break missingId;
      }

      id = R.id.like_counter;
      TextView likeCounter = ViewBindings.findChildViewById(rootView, id);
      if (likeCounter == null) {
        break missingId;
      }

      id = R.id.native_preview_progress;
      RelativeLayout nativePreviewProgress = ViewBindings.findChildViewById(rootView, id);
      if (nativePreviewProgress == null) {
        break missingId;
      }

      id = R.id.play_video;
      RelativeLayout playVideo = ViewBindings.findChildViewById(rootView, id);
      if (playVideo == null) {
        break missingId;
      }

      FrameLayout promoteNative = (FrameLayout) rootView;

      id = R.id.rel_preview;
      RelativeLayout relPreview = ViewBindings.findChildViewById(rootView, id);
      if (relPreview == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.video_preview;
      ImageView videoPreview = ViewBindings.findChildViewById(rootView, id);
      if (videoPreview == null) {
        break missingId;
      }

      id = R.id.views;
      TextView views = ViewBindings.findChildViewById(rootView, id);
      if (views == null) {
        break missingId;
      }

      id = R.id.watch_video;
      RelativeLayout watchVideo = ViewBindings.findChildViewById(rootView, id);
      if (watchVideo == null) {
        break missingId;
      }

      id = R.id.watch_video_txt;
      AppCompatTextView watchVideoTxt = ViewBindings.findChildViewById(rootView, id);
      if (watchVideoTxt == null) {
        break missingId;
      }

      return new YoutubeBannerNativeBinding((FrameLayout) rootView, ad, bodyColor, likeCounter,
          nativePreviewProgress, playVideo, promoteNative, relPreview, title, videoPreview, views,
          watchVideo, watchVideoTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
