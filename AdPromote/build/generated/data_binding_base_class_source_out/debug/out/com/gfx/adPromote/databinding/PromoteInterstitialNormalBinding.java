// Generated by view binder compiler. Do not edit!
package com.gfx.adPromote.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.gfx.adPromote.R;
import com.tbuonomo.viewpagerdotsindicator.SpringDotsIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PromoteInterstitialNormalBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView ad;

  @NonNull
  public final LinearLayout buttons;

  @NonNull
  public final TextView closeCount;

  @NonNull
  public final TextView closeText;

  @NonNull
  public final SpringDotsIndicator dotsIndicator;

  @NonNull
  public final TextView downloadAd;

  @NonNull
  public final RelativeLayout interIconProgress;

  @NonNull
  public final ImageView interIcons;

  @NonNull
  public final TextView interstitialAppName;

  @NonNull
  public final RelativeLayout interstitialClose;

  @NonNull
  public final RelativeLayout interstitialInstall;

  @NonNull
  public final TextView interstitialInstallTxt;

  @NonNull
  public final ImageView interstitialPreview;

  @NonNull
  public final RelativeLayout interstitialPreviewProgress;

  @NonNull
  public final TextView interstitialShortDescription;

  @NonNull
  public final TextView rateAd;

  @NonNull
  public final TextView rateCounter;

  @NonNull
  public final ViewPager viewpager;

  private PromoteInterstitialNormalBinding(@NonNull RelativeLayout rootView, @NonNull TextView ad,
      @NonNull LinearLayout buttons, @NonNull TextView closeCount, @NonNull TextView closeText,
      @NonNull SpringDotsIndicator dotsIndicator, @NonNull TextView downloadAd,
      @NonNull RelativeLayout interIconProgress, @NonNull ImageView interIcons,
      @NonNull TextView interstitialAppName, @NonNull RelativeLayout interstitialClose,
      @NonNull RelativeLayout interstitialInstall, @NonNull TextView interstitialInstallTxt,
      @NonNull ImageView interstitialPreview, @NonNull RelativeLayout interstitialPreviewProgress,
      @NonNull TextView interstitialShortDescription, @NonNull TextView rateAd,
      @NonNull TextView rateCounter, @NonNull ViewPager viewpager) {
    this.rootView = rootView;
    this.ad = ad;
    this.buttons = buttons;
    this.closeCount = closeCount;
    this.closeText = closeText;
    this.dotsIndicator = dotsIndicator;
    this.downloadAd = downloadAd;
    this.interIconProgress = interIconProgress;
    this.interIcons = interIcons;
    this.interstitialAppName = interstitialAppName;
    this.interstitialClose = interstitialClose;
    this.interstitialInstall = interstitialInstall;
    this.interstitialInstallTxt = interstitialInstallTxt;
    this.interstitialPreview = interstitialPreview;
    this.interstitialPreviewProgress = interstitialPreviewProgress;
    this.interstitialShortDescription = interstitialShortDescription;
    this.rateAd = rateAd;
    this.rateCounter = rateCounter;
    this.viewpager = viewpager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PromoteInterstitialNormalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PromoteInterstitialNormalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.promote_interstitial_normal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PromoteInterstitialNormalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ad;
      TextView ad = ViewBindings.findChildViewById(rootView, id);
      if (ad == null) {
        break missingId;
      }

      id = R.id.buttons;
      LinearLayout buttons = ViewBindings.findChildViewById(rootView, id);
      if (buttons == null) {
        break missingId;
      }

      id = R.id.closeCount;
      TextView closeCount = ViewBindings.findChildViewById(rootView, id);
      if (closeCount == null) {
        break missingId;
      }

      id = R.id.closeText;
      TextView closeText = ViewBindings.findChildViewById(rootView, id);
      if (closeText == null) {
        break missingId;
      }

      id = R.id.dots_indicator;
      SpringDotsIndicator dotsIndicator = ViewBindings.findChildViewById(rootView, id);
      if (dotsIndicator == null) {
        break missingId;
      }

      id = R.id.downloadAd;
      TextView downloadAd = ViewBindings.findChildViewById(rootView, id);
      if (downloadAd == null) {
        break missingId;
      }

      id = R.id.inter_icon_progress;
      RelativeLayout interIconProgress = ViewBindings.findChildViewById(rootView, id);
      if (interIconProgress == null) {
        break missingId;
      }

      id = R.id.inter_icons;
      ImageView interIcons = ViewBindings.findChildViewById(rootView, id);
      if (interIcons == null) {
        break missingId;
      }

      id = R.id.interstitial_app_name;
      TextView interstitialAppName = ViewBindings.findChildViewById(rootView, id);
      if (interstitialAppName == null) {
        break missingId;
      }

      id = R.id.interstitial_close;
      RelativeLayout interstitialClose = ViewBindings.findChildViewById(rootView, id);
      if (interstitialClose == null) {
        break missingId;
      }

      id = R.id.interstitial_install;
      RelativeLayout interstitialInstall = ViewBindings.findChildViewById(rootView, id);
      if (interstitialInstall == null) {
        break missingId;
      }

      id = R.id.interstitial_install_txt;
      TextView interstitialInstallTxt = ViewBindings.findChildViewById(rootView, id);
      if (interstitialInstallTxt == null) {
        break missingId;
      }

      id = R.id.interstitial_preview;
      ImageView interstitialPreview = ViewBindings.findChildViewById(rootView, id);
      if (interstitialPreview == null) {
        break missingId;
      }

      id = R.id.interstitial_preview_progress;
      RelativeLayout interstitialPreviewProgress = ViewBindings.findChildViewById(rootView, id);
      if (interstitialPreviewProgress == null) {
        break missingId;
      }

      id = R.id.interstitial_short_description;
      TextView interstitialShortDescription = ViewBindings.findChildViewById(rootView, id);
      if (interstitialShortDescription == null) {
        break missingId;
      }

      id = R.id.rateAd;
      TextView rateAd = ViewBindings.findChildViewById(rootView, id);
      if (rateAd == null) {
        break missingId;
      }

      id = R.id.rate_counter;
      TextView rateCounter = ViewBindings.findChildViewById(rootView, id);
      if (rateCounter == null) {
        break missingId;
      }

      id = R.id.viewpager;
      ViewPager viewpager = ViewBindings.findChildViewById(rootView, id);
      if (viewpager == null) {
        break missingId;
      }

      return new PromoteInterstitialNormalBinding((RelativeLayout) rootView, ad, buttons,
          closeCount, closeText, dotsIndicator, downloadAd, interIconProgress, interIcons,
          interstitialAppName, interstitialClose, interstitialInstall, interstitialInstallTxt,
          interstitialPreview, interstitialPreviewProgress, interstitialShortDescription, rateAd,
          rateCounter, viewpager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
